---
- name: Check if psql is installed
  command: "psql --version"
  register: psql_check
  changed_when: false
  ignore_errors: true

- name: Install dependencies for PostgreSQL
  apt:
    name:
      - bash
      - openssl
      - libssl-dev
      - libssl-doc
    update_cache: yes
    state: latest
  when: psql_check.rc != 0

- name: Install required packages (curl and ca-certificates)
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - curl
    - ca-certificates
  when: psql_check.rc != 0

- name: Create directory for PostgreSQL repository key
  file:
    path: /usr/share/postgresql-common/pgdg
    state: directory
  when: psql_check.rc != 0

- name: Download PostgreSQL repository signing key
  get_url:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    dest: /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc
  when: psql_check.rc != 0

- name: Add PostgreSQL repository to sources.list.d
  shell: |
    echo "deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
  when: psql_check.rc != 0

- name: Update package lists
  apt:
    update_cache: yes
  when: psql_check.rc != 0

- name: Install PostgreSQL
  apt:
    name: "postgresql-{{ postgresql_version }}"
    state: present  # Use 'present' for idempotence
  when: psql_check.rc != 0

- name: Start and enable PostgreSQL service
  service:
    name: postgresql
    state: started
    enabled: yes
  when: psql_check.rc != 0

- name: Ensure user has access to PostgreSQL as a superuser
  become: true
  become_user: postgres
  postgresql_user:
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    role_attr_flags: SUPERUSER
    state: present
  when: psql_check.rc != 0

