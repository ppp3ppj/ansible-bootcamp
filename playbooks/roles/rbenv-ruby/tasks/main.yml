---
- name: Set rbenv_root variable
  set_fact:
    rbenv_root: ~/.rbenv

- name: Set variables for Ruby installation
  vars:
    ruby_version: "3.3.0"
    ruby_install_dir: "{{ rbenv_root }}/versions/{{ ruby_version }}"
    shell_config_file: "{{ ansible_user_dir }}/.{{ shell_type }}rc"
    shell_executable: "/bin/bash"  # Assuming default shell is bash

- name: Clone rbenv repository
  git:
    repo: https://github.com/rbenv/rbenv.git
    dest: "{{ rbenv_root }}"
    clone: yes
    update: no

- name: Check if shell config file exists
  stat:
    path: "{{ shell_config_file }}"
  register: shell_config_check

- name: Source shell config file if exists
  shell: "source {{ shell_config_file }}"
  args:
    executable: "{{ shell_executable }}"
  when: shell_config_check.stat.exists

- name: Clone ruby-build repository
  git:
    repo: https://github.com/rbenv/ruby-build.git
    dest: "{{ rbenv_root }}/plugins/ruby-build"
    clone: yes

- name: Install Ruby
  shell: "{{ rbenv_root }}/bin/rbenv install {{ ruby_version }}"
  args:
    executable: "{{ shell_executable }}"
    creates: "{{ ruby_install_dir }}"

- name: Set global Ruby version
  shell: "{{ rbenv_root }}/bin/rbenv global {{ ruby_version }}"
  args:
    executable: "{{ shell_executable }}"

- name: Restart shell
  command: "exec $SHELL"
  creates: "~/.ansible_shell_restart"

- name: Check installed Ruby version
  shell: "ruby -v"
  register: installed_ruby_version
  args:
    executable: "{{ shell_executable }}"

- debug:
    msg: "Installed Ruby version is {{ installed_ruby_version.stdout }}"

